@use "sass:map";

// Ex:
//
// $headless: true;  // Does not build Duomo CSS
// $headless: false; // Builds Duomo CSS
//
$headless: false !default;

// Ex:
//
// $separator: ":"; // -> class="px-16 sm:px-24"
// $separator: "."; // -> class="px-16 sm.px-24"
//
$separator: ":" !default;

$transparent: transparent !default;
$currentColor: currentColor !default;
$black: #000 !default;
$white: #fff !default;
$red: #f00 !default;
$green: #0f0 !default;
$blue: #00f !default;

$color-map: (
	transparent: $transparent,
	currentColor: $currentColor,
	black: $black,
	white: $white,
	red: $red,
	green: $green,
	blue: $blue,
) !default;

// Ex:
//
// .opacity-0   { opacity: 0; }
// .opacity-50  { opacity: 0.5; }
// .opacity-100 { opacity: 1; }
//
// prettier-ignore
$opacity-range: (
	0,
	0.05,
	0.1,
	0.15,
	0.2,
	0.25,
	1 - 0.25,
	1 - 0.2,
	1 - 0.15,
	1 - 0.1,
	1 - 0.05,
	1 - 0,
) !default;

$xs: 32 * 16 !default; // ->  512
$sm: 40 * 16 !default; // ->  640
$md: 48 * 16 !default; // ->  768
$lg: 64 * 16 !default; // -> 1024
$xl: 80 * 16 !default; // -> 1280

// Ex:
//
// @media (min-width: #{$xs + px}) { .xs { /* ... */ } }
// @media (min-width: #{$sm + px}) { .sm { /* ... */ } }
// @media (min-width: #{$md + px}) { .md { /* ... */ } }
// @media (min-width: #{$lg + px}) { .lg { /* ... */ } }
// @media (min-width: #{$xl + px}) { .xl { /* ... */ } }
//
$breakpoint-map: (
	xs: $xs,
	sm: $sm,
	md: $md,
	lg: $lg,
	xl: $xl,
) !default;

@function getter($name, $key) {
	$got: map.get($color-map, $key);
	@if not $got {
		@error $name + ": no " + $name + " exists for key " + $key;
	}
	@return $got;
}

@function color($key) {
	@return getter("color", $key);
}
@function shadow($key) {
	@return getter("shadow", $key);
}
@function breakpoint($key) {
	@return getter("breakpoint", $key);
}
