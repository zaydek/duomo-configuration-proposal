@use "sass:list";
@use "sass:string";

@forward "duomo-config";
@use "duomo-config" as config;

// https://mothereff.in/css-escapes
// https://mathiasbynens.be/notes/css-escapes
//
// prettier-ignore
$__escape-list: ("\!", "\"", "\#", "\$", "\%", "\&", "\'", "\(", "\)", "\*", "\+", "\,", "\-", "\.", "\/", "\:", "\;", "\<", "\=", "\>", "\?", "\@", "\[", "\\", "\]", "\^", "\`", "\{", "\|", "\}", "\~");

// TODO: Extract this.
@function escape($any) {
	$str: "" + $any;
	$escaped: "";
	@for $x from 1 through string.length($str) {
		$ch: string.slice($str, $x, $x);
		@if list.index($__escape-list, $ch) {
			$escaped: $escaped + "\\"+ $ch;
		} @else {
			$escaped: $escaped + $ch;
		}
	}
	@return $escaped;
}

// TODO: Extract this.
@function get-ampersand() {
	@if not & {
		@return ".";
	}
	@return & + escape(config.$separator);
}

// TODO: Extract this.
@mixin theme {
	html {
		@each $v in config.$opacity-range {
			--opacity-#{$v * 100}: #{$v};
		}
	}
}

@mixin props {
	$amp: get-ampersand();

	@each $v in config.$opacity-range {
		#{$amp}opacity-#{$v * 100} {
			opacity: #{$v};
		}
	}
}

@at-root {
	@if not config.$headless {
		@include props;
		@each $k, $v in config.$breakpoint-map {
			@media (min-width: #{$v + px}) {
				.#{$k} {
					@at-root {
						@include props;
					}
				}
			}
		}
	}
}
